let smallestXref,smallestYref,biggestXref,biggestYref;function svgify(a,b,c,d=[0,0]){"undefined"==typeof svgify.run?svgify.run=1:svgify.run++,smallestXref=1e4,smallestYref=1e4,biggestXref=0,biggestYref=0;let e="";if(e=extractionSVG(a,d)[0],10!=smallestXref&&10!=smallestYref)return 2<svgify.run?(innerConsole("Error! Too much recursion!"),innerConsole("bdf File might be currupted?"),svgify.run=1,0):(innerConsole("Starting Conversion..."),svgify(a,b,c,[-1*smallestXref+d[0]+10,-1*smallestYref+d[1]+10]));else{innerConsole("Reference ok!"),svgify.run=1;biggestXref+=10,biggestYref+=10,e="<svg width=\""+biggestXref+"\" height=\""+biggestYref+"\" xmlns=\"http://www.w3.org/2000/svg\">"+c+e+"</svg>",innerConsole("Done!");let a=Math.floor(10*(e.length/1024))/10;return innerConsole("File with "+a+"kB generated."),e}}function extractionSVG(a,b,c=[]){let d="",e=a.length,f=[],g=[];for(let d=0;10>d;d++)g.push(0);0!=c.length&&(g=c);let h=["/*","symbol","pin","text ","line ","connector","circle ","junction ","arc ","rectangle "];for(let i=0;i<e;i++)for(let c=0;10>c;c++)if(a.slice(i,i+h[c].length)===h[c])if(0==c)for(i;i<a.length&&"*/"!=a.slice(i,i+2);i++);else if(1==c||2==c){let e=findAndReturn(a,h[c],g[c]),f=computeSymbolPin(e,b);d+=f[0];for(let a=0;9>a;a++)g[a]+=f[1][a];g[c]++,i+=e.length+h[c].length+2,c=0}else{let e=findAndReturn(a,h[c],g[c]),j=computeElement(h[c],e,b,f);d+=j[0],f=j[1],g[c]++,i+=e.length+h[c].length+2}return[d,g]}function computeSymbolPin(a,b){let c="",d=findAndReturn(a,"rect",0),e=getReferencePoints(d);e[0]+=b[0],e[1]+=b[1],e[2]+=b[0],e[3]+=b[1],c=rectangleToSVG("",e,"refRect");let f=extractionSVG(a,e,[]);return c+=f[0],[c,f[1]]}function computeElement(a,b,c,d){let e="";switch(a){case"line ":case"connector":e=lineToSVG(b,c);break;case"circle ":e=circleToSVG(b,c);break;case"junction ":e=junctionToSVG(b,c);break;case"arc ":e=arcToSVG(b,c);break;case"rectangle ":e=rectangleToSVG(b,c);break;case"text ":if(!b.includes("invisible")){let a,f,g=getActualText(b);if(!d.includes(g)){let h=findAndReturn(b,"rect");a=extractNum(h,0)+c[0],f=extractNum(h,1)+c[1]+10,e+=textToSVG(a,f,g,"text"),d.push(g)}}}return[e,d]}function getActualText(a){let b="";for(let c=1;c<a.length&&"\""!==a[c];c++)b+=a[c];return b}function getReferencePoints(a){let b=[];for(let c=0;4>c;c++)b.push(extractNum(a,c));return b}function findAndReturn(a,b,c=0){let d="",e=0;for(let f=0;f<a.length-b.length-1;f++)if(a.slice(f,f+b.length)===b){let g=0;if("("===a[f-1])for(let h=f-1;h<a.length;h++)if(d+=a[h],"("===a[h]?g++:")"===a[h]&&g--,0===g){if(e===c)return d=d.substring(1+b.length,d.length-1),d;d="",h=a.length,e++}}return"NULL"}function extractNum(a,b){let c=0,d=0,e="";for(let f=0;f<a.length;f++)if("0"<=a[f]&&"9">=a[f]){c=0<f&&"-"===a[f-1]?-1:1;for(let b=f;b<a.length;b++)"0"<=a[f]&&"9">=a[f]?(e+=a[f],f++):b=a.length;d===b?f=a.length:e="",d++}return parseInt(e.match(/\d+/g)[0])*c}function determineSBCoordinates(a=[],b=[]){for(let c of a)c<smallestXref&&(smallestXref=c),c>biggestXref&&(biggestXref=c);for(let c of b)c<smallestYref&&(smallestYref=c),c>biggestYref&&(biggestYref=c)}function textToSVG(a,b,c,d=""){return determineSBCoordinates([a],[b]),"<text x=\""+a+"\" y=\""+b+"\" class=\""+d+"\">"+c+"</text>"}function lineToSVG(a,b){let c=b[0]+extractNum(a,0),d=b[1]+extractNum(a,1),e=b[0]+extractNum(a,2),f=b[1]+extractNum(a,3);return determineSBCoordinates([c,e],[d,f]),"<line x1=\""+c+"\" y1=\""+d+"\" x2=\""+e+"\" y2=\""+f+"\" class=\"line\"/>"}function circleToSVG(a,b){let c=b[0]+extractNum(a,0),d=b[1]+extractNum(a,1),e=b[0]+extractNum(a,2),f=b[1]+extractNum(a,3);return determineSBCoordinates([c,e],[d,f]),"<ellipse cx=\""+(c+(e-c)/2)+"\" cy=\""+(d+(f-d)/2)+"\" rx=\""+(e-c)/2+"\" ry=\""+(f-d)/2+"\" class=\"circle\"/>"}function junctionToSVG(a,b){let c=b[0]+extractNum(a,0),d=b[1]+extractNum(a,1);return determineSBCoordinates([c],[d]),"<circle cy=\""+d+"\" cx=\""+c+"\" r=\"2\" class=\"junction\"/>"}function arcToSVG(a,b){let c=[];for(let d=0;8>d;d++)c[d]=b[d%2]+extractNum(a,d);let d=correctArc(c);for(let e=0;4>e;e++)c[e]=d[e];determineSBCoordinates([c[4],c[6]],[c[5],c[7]]);let e=Math.abs((c[6]-c[4])/2),f=Math.abs((c[7]-c[5])/2);return"<path d=\"M "+c[0]+" "+c[1]+" A "+e+" "+f+" 0 0 0 "+c[2]+" "+c[3]+"\" class=\"arc\"/>"}function rectangleToSVG(a,b,c="rectangle"){let d,e,f,g;return"refRect"==c?(d=b[0],e=b[1],f=b[2],g=b[3]):(d=b[0]+extractNum(a,0),e=b[1]+extractNum(a,1),f=b[0]+extractNum(a,2),g=b[1]+extractNum(a,3)),determineSBCoordinates([d,f],[e,g]),"<rect x=\""+d+"\" y=\""+e+"\" width=\""+(f-d)+"\" height=\""+(g-e)+"\" class=\""+c+"\"/>"}function correctArc(a){let b=[],c=a[6]-a[4];if(c===a[7]-a[5]){let d=a[4]+c/2,e=a[5]+c/2,f=[];f[0]=d+c/2*((a[0]-d)/Math.sqrt(Math.pow(a[0]-d,2)+Math.pow(a[1]-e,2))),f[1]=e+c/2*((a[1]-e)/Math.sqrt(Math.pow(a[0]-d,2)+Math.pow(a[1]-e,2))),f[2]=d+c/2*((a[2]-d)/Math.sqrt(Math.pow(a[2]-d,2)+Math.pow(a[3]-e,2))),f[3]=e+c/2*((a[3]-e)/Math.sqrt(Math.pow(a[2]-d,2)+Math.pow(a[3]-e,2)));for(let a=0;4>a;a++)f[a]=Math.abs(f[a]),b.push(Math.round(f[a]))}else innerConsole("Element with non-circular arc found. Rendering might be off."),b=a;return b}